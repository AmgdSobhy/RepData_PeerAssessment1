m2 <- median(s$steps_per_day)
a <- d %>% group_by(interval) %>% summarise(meansteps = mean(steps, na.rm = TRUE))
head(a)
a %>% ggplot(aes(x = interval , y = meansteps)) + geom_line()+
xlab("5-minute interval") + ylab("Average Number of Steps ") +
ggtitle("Time series of the average number of steps taken") +
theme(plot.title = element_text(hjust = 0.5))
head(d)
?n
d %>% filter(is.na(steps)) %>% n
d %>% filter(is.na(steps)) %>% nrow()
d %>% filter(is.na(steps)) %>% nrow
d %>% mutate(steps = replace_na(x, 0))
d$steps %>% mutate_if(is.na(steps),replace, 0)
d %>% mutate(steps = replace_na(x, 0))
mutate(steps = replace_na(d$steps, 0))
mutate(d,steps = replace_na(d$steps, 0))
mutate(d,steps = replace_na(d$steps, a))
nrow(d) / nrow(a)
mutate(d,steps = replace_na(d$steps, rep(a,61)))
mutate(d,steps = replace_na(d$steps, rep(a$meansteps,61)))
mutate(d,steps = replace_na(d$steps, a$meansteps)))
mutate(d,steps = replace_na(d$steps, a$meansteps))
mutate(d,steps = replace_na(d$steps,1,a$meansteps))
mutate(d,steps = replace_na(d$steps,a$meansteps,1))
d <- mutate(steps = replace_na(d$steps,1,a$meansteps))
d <- mutate(steps = replace_na(steps,1))
d <- mutate(steps = replace_na(d$steps,1))
d %>%  mutate(steps = replace_na(steps,1))
d %>%  replace_na(steps,1)
replace_na(d$steps,1)
?impute
impute
?impute
??impute
activityDataImputed <- d
activityDataImputed$steps <- impute(activityData$steps, fun=mean)
install.packages("impute ")
install.packages("impute")
replace_na(d$steps,1) %>% head
d %>%  mutate(steps = replace_na(steps,1)) %>% head
setwd("~/RepData_PeerAssessment1")
d <- readr::read_csv("activity.zip")
head(d)
s <- d %>% group_by(date) %>% summarise(steps_per_day = sum(steps,na.rm=TRUE))
head(s)
s %>% ggplot(aes(x = steps_per_day)) + geom_histogram(binwidth = 500) +
xlab("Steps Per Day") + ylab("Frequncy") +
ggtitle("Histogram of The Total Number of Steps Taken Each Day") +
theme(plot.title = element_text(hjust = 0.5))
m1 <- mean(s$steps_per_day)
m2 <- median(s$steps_per_day)
a <- d %>% group_by(interval) %>% summarise(meansteps = mean(steps, na.rm = TRUE))
head(a)
a %>% ggplot(aes(x = interval , y = meansteps)) + geom_line()+
xlab("5-minute interval") + ylab("Average Number of Steps ") +
ggtitle("Time series of the average number of steps taken") +
theme(plot.title = element_text(hjust = 0.5))
a1 <- a %>% filter(meansteps == max(meansteps)) %>% slice(1)
a1 <- unname(unlist(a1[1,1]))
missing <- d %>% filter(is.na(steps)) %>% nrow
replace_na(d$steps,1) %>% head
I <- d %>%  mutate(steps = replace_na(steps,1))
head(I)
I %>% ggplot(aes(x = steps_per_day)) + geom_histogram(binwidth = 500) +
xlab("Steps Per Day") + ylab("Frequncy") +
ggtitle("Histogram of The Total Number of Steps Taken Each Day") +
theme(plot.title = element_text(hjust = 0.5))
setwd("~/RepData_PeerAssessment1")
d <- readr::read_csv("activity.zip")
head(d)
s <- d %>% group_by(date) %>% summarise(steps_per_day = sum(steps,na.rm=TRUE))
head(s)
s %>% ggplot(aes(x = steps_per_day)) + geom_histogram(binwidth = 500) +
xlab("Steps Per Day") + ylab("Frequncy") +
ggtitle("Histogram of The Total Number of Steps Taken Each Day") +
theme(plot.title = element_text(hjust = 0.5))
m1 <- mean(s$steps_per_day)
m2 <- median(s$steps_per_day)
a <- d %>% group_by(interval) %>% summarise(meansteps = mean(steps, na.rm = TRUE))
head(a)
a %>% ggplot(aes(x = interval , y = meansteps)) + geom_line()+
xlab("5-minute interval") + ylab("Average Number of Steps ") +
ggtitle("Time series of the average number of steps taken") +
theme(plot.title = element_text(hjust = 0.5))
a1 <- a %>% filter(meansteps == max(meansteps)) %>% slice(1)
a1 <- unname(unlist(a1[1,1]))
missing <- d %>% filter(is.na(steps)) %>% nrow
replace_na(d$steps,1) %>% head
I <- d %>%  mutate(steps = replace_na(steps,1))
head(I)
Is <- I %>% group_by(date) %>% summarise(steps_per_day = sum(steps)) %>%
ggplot(aes(x = steps_per_day)) + geom_histogram(binwidth = 500) +
xlab("Steps Per Day") + ylab("Frequncy") +
ggtitle("Histogram of The Total Number of Steps Taken Each Day") +
theme(plot.title = element_text(hjust = 0.5))
Is <- I %>% group_by(date) %>% summarise(steps_per_day = sum(steps)) %>%
ggplot(aes(x = steps_per_day)) + geom_histogram(binwidth = 500) +
xlab("Steps Per Day") + ylab("Frequncy") +
ggtitle("Histogram of The Total Number of Steps Taken Each Day") +
theme(plot.title = element_text(hjust = 0.5))
Is <- I %>% group_by(date) %>% summarise(steps_per_day = sum(steps)) %>%
ggplot(aes(x = steps_per_day)) + geom_histogram(binwidth = 500) +
xlab("Steps Per Day") + ylab("Frequncy") +
ggtitle("Histogram of The Total Number of Steps Taken Each Day") +
theme(plot.title = element_text(hjust = 0.5))
Is <- I %>% group_by(date) %>% summarise(steps_per_day = sum(steps))
IS %>%   ggplot(aes(x = steps_per_day)) + geom_histogram(binwidth = 500) +
xlab("Steps Per Day") + ylab("Frequncy") +
ggtitle("Histogram of The Total Number of Steps Taken Each Day") +
theme(plot.title = element_text(hjust = 0.5))
Is <- I %>% group_by(date) %>% summarise(steps_per_day = sum(steps))
Is %>%   ggplot(aes(x = steps_per_day)) + geom_histogram(binwidth = 500) +
xlab("Steps Per Day") + ylab("Frequncy") +
ggtitle("Histogram of The Total Number of Steps Taken Each Day") +
theme(plot.title = element_text(hjust = 0.5))
m3 <- mean(Is$steps_per_day)
m4 <- median(Is$steps_per_day)
m3 <- mean(Is$steps_per_day)
m4 <- median(Is$steps_per_day)
d %>% mutate_if(date$wday %in% c(0,6),day = "weekday")
d %>% mutate_if((date$wday %in% c(0,6)),day = "weekday")
d %>% mutate_if((wday(date) %in% c(0,6)),day = "weekday")
d %>% mutate_if((weekdays(date) %in% c(0,6)),day = "weekday")
d %>% mutate_if((weekdays(`date`) %in% c(0,6)),day = "weekday")
head(d,1)
d %>% rename(DATE,date)
d %>% rename(DATE= date)
d %>%  rename(DATE= date) %>% mutate_if((weekdays(`DATE`) %in% c(0,6)),day = "weekday")
d %>%  rename(DATE= date) %>% mutate_if((weekdays(d$DATE) %in% c(0,6)),day = "weekday")
d %>% mutate(weekday = weekday(date))
d %>% mutate(weekday = weekday(`date`))
d %>% rename mutate(weekday = weekday(`date`))
weekdays(d$date)
d %>% mutate(weekday = weekdays(`date`))
# When there's only one function in the list, it modifies existing
# variables in place. Give it a name to instead create new variables:
head(iris)
iris %>% mutate_if(is.numeric, list(scale2))
iris %>% mutate_if(is.numeric, list(scale = scale2))
iris <- as_tibble(iris)
# All variants can be passed functions and additional arguments,
# purrr-style. The _at() variants directly support strings. Here
# we'll scale the variables `height` and `mass`:
scale2 <- function(x, na.rm = FALSE) (x - mean(x, na.rm = na.rm)) / sd(x, na.rm)
starwars %>% mutate_at(c("height", "mass"), scale2)
starwars
d %>% mutate(weekday = weekdays(`date`)) %>% mutate(weekend = ifelse(weekday %in% c(0,6),'weekend' , 'weekday'))
> d %>% mutate(weekend = ifelse(weekdays(`date`) %in% c(0,6),'weekend' , 'weekday'))
d %>% mutate(weekend = ifelse(weekdays(`date`) %in% c(0,6),'weekend' , 'weekday'))
f <- d %>% mutate(weekend = ifelse(weekdays(`date`) %in% c(0,6),'weekend' , 'weekday'))
head(f)
f %>% group_by(date) %>% summarise(steps_per_day = sum(steps,na.rm=TRUE)) %>%
ggplot(aes(x = interval , y = meansteps)) + geom_line()+ facet_grid(weekend ~ .)
f <- d %>% mutate(weekend = ifelse(weekdays(`date`) %in% c(0,6),'weekend' , 'weekday'))
head(f)
f %>% group_by(date) %>% summarise(steps_per_day = sum(steps,na.rm=TRUE)) %>%
ggplot(aes(x = interval , y = meansteps)) + geom_line()+ facet_grid(weekend ~ .)
f %>% group_by(date,weekend) %>% summarise(steps_per_day = sum(steps,na.rm=TRUE)) %>%
ggplot(aes(x = interval , y = meansteps)) + geom_line()+ facet_grid(weekend ~ .)
f %>% group_by(date,weekend) %>% summarise(steps_per_day = sum(steps,na.rm=TRUE))
f %>% group_by(date,weekend,interval) %>% summarise(steps_per_day = sum(steps,na.rm=TRUE)) %>%
ggplot(aes(x = interval , y = meansteps)) + geom_line()+ facet_grid(weekend ~ .)
f %>% group_by(date,weekend,interval) %>% summarise(steps_per_day = sum(steps,na.rm=TRUE)) %>%
ggplot(aes(x = interval , y = meansteps)) + geom_line()+ facet_grid(weekend ~ .)
f %>% group_by(date,weekend,interval) %>% summarise(steps_per_day = sum(steps,na.rm=TRUE))
f %>% group_by(date,weekend) %>% summarise(steps_per_day = sum(steps,na.rm=TRUE))
setwd("~/RepData_PeerAssessment1")
d <- readr::read_csv("activity.zip")
head(d)
s <- d %>% group_by(date) %>% summarise(steps_per_day = sum(steps,na.rm=TRUE))
head(s)
s %>% ggplot(aes(x = steps_per_day)) + geom_histogram(binwidth = 500) +
xlab("Steps Per Day") + ylab("Frequncy") +
ggtitle("Histogram of The Total Number of Steps Taken Each Day") +
theme(plot.title = element_text(hjust = 0.5))
m1 <- mean(s$steps_per_day)
m2 <- median(s$steps_per_day)
a <- d %>% group_by(interval) %>% summarise(meansteps = mean(steps, na.rm = TRUE))
head(a)
a %>% ggplot(aes(x = interval , y = meansteps)) + geom_line()+
xlab("5-minute interval") + ylab("Average Number of Steps ") +
ggtitle("Time series of the average number of steps taken") +
theme(plot.title = element_text(hjust = 0.5))
a1 <- a %>% filter(meansteps == max(meansteps)) %>% slice(1)
a1 <- unname(unlist(a1[1,1]))
missing <- d %>% filter(is.na(steps)) %>% nrow
replace_na(d$steps,1) %>% head
I <- d %>%  mutate(steps = replace_na(steps,1))
head(I)
Is <- I %>% group_by(date) %>% summarise(steps_per_day = sum(steps))
Is %>%   ggplot(aes(x = steps_per_day)) + geom_histogram(binwidth = 500) +
xlab("Steps Per Day") + ylab("Frequncy") +
ggtitle("Histogram of The Total Number of Steps Taken Each Day") +
theme(plot.title = element_text(hjust = 0.5))
m3 <- mean(Is$steps_per_day)
m4 <- median(Is$steps_per_day)
f %>% group_by(interval) %>% summarise(steps_per_day = sum(steps,na.rm=TRUE))
f %>% group_by(interval) %>% summarise(steps_per_day = sum(steps,na.rm=TRUE)) %>%
ggplot(aes(x = interval , y = meansteps)) + geom_line()+ facet_grid(weekend ~ .)
f %>% group_by(interval,weekend) %>% summarise(steps_per_day = sum(steps,na.rm=TRUE)) %>%
ggplot(aes(x = interval , y = meansteps)) + geom_line()+ facet_grid(weekend ~ .)
f %>% group_by(interval,weekend) %>% summarise(steps_per_day = sum(steps,na.rm=TRUE))
f %>% group_by(interval,weekend) %>% summarise(steps_per_day = sum(steps,na.rm=TRUE)) %>%
ggplot(aes(x = interval , y = meansteps)) + geom_line()+ facet_grid(weekend ~ .)
f %>% group_by(interval,weekend) %>% summarise(steps_per_day = sum(steps,na.rm=TRUE)) %>%
ggplot(aes(x = interval , y = steps_per_day)) + geom_line()+ facet_grid(weekend ~ .)
xlab("5-minute interval") + ylab("Average Number of Steps ") +
ggtitle("Time series of the average number of steps taken by weekend or weekday") +
theme(plot.title = element_text(hjust = 0.5))
f %>% group_by(interval,weekend) %>% summarise(steps_per_day = sum(steps,na.rm=TRUE)) %>%
ggplot(aes(x = interval , y = steps_per_day)) + geom_line()+ facet_grid(weekend ~ .)
#xlab("5-minute interval") + ylab("Average Number of Steps ") +
#ggtitle("Time series of the average number of steps taken by weekend or weekday") +
#theme(plot.title = element_text(hjust = 0.5))
averagedActivityDataImputed <- aggregate(steps ~ interval + dateType, data=activityDataImputed, mean)
activityDataImputed$dateType <-  ifelse(as.POSIXlt(activityDataImputed$date)$wday %in% c(0,6), 'weekend', 'weekday')
averagedActivityDataImputed <- aggregate(steps ~ interval + dateType, data=activityDataImputed, mean)
averagedActivityDataImputed
f %>% group_by(interval,weekend) %>% summarise(steps_per_day = sum(steps,na.rm=TRUE))
f %>% group_by(interval,weekend) %>% summarise(steps_per_day = mean(steps,na.rm=TRUE)) %>%
ggplot(aes(x = interval , y = steps_per_day)) + geom_line()+ facet_grid(weekend ~ .)
#xlab("5-minute interval") + ylab("Average Number of Steps ") +
#ggtitle("Time series of the average number of steps taken by weekend or weekday") +
#theme(plot.title = element_text(hjust = 0.5))
f %>% group_by(interval,weekend) %>% summarise(steps_per_day = mean(steps,na.rm=TRUE))
d %>% head
d %>% filter(!is.na(steps)) %>%head
d %>% mutate(weekend = ifelse(weekdays(`date`) %in% c(0,6),'weekend' , 'weekday'))%>%head
d %>% mutate(weekend = ifelse(weekdays(`date`) %in% c(0,6),'weekend' , 'weekday'))%>%
group_by(interval)%>%
head
d %>% mutate(weekend = ifelse(weekdays(`date`) %in% c(0,6),'weekend' , 'weekday'))%>%
group_by(interval)%>% summarise(meansteps = mean(steps,na.rm = TRUE))
head
d %>% mutate(weekend = ifelse(weekdays(`date`) %in% c(0,6),'weekend' , 'weekday'))%>%
group_by(interval)%>% summarise(meansteps = mean(steps,na.rm = TRUE)) %>%
head
d %>% mutate(weekend = ifelse(weekdays(`date`) %in% c(0,6),'weekend' , 'weekday'))%>%
group_by(interval,weekend)%>% summarise(meansteps = mean(steps,na.rm = TRUE)) %>%
head
d %>% mutate(weekend = ifelse(weekdays(`date`) %in% c(0,6),'weekend' , 'weekday'))%>%
group_by(interval,weekend)%>% summarise(meansteps = mean(steps,na.rm = TRUE)) %>%
ggplot(aes(interval, steps)) +
geom_line() +
facet_grid(weekend ~ .) +
xlab("5-minute interval") +
ylab("avarage number of steps"
)
d %>% mutate(weekend = ifelse(weekdays(`date`) %in% c(0,6),'weekend' , 'weekday'))%>%
group_by(interval,weekend)%>% summarise(meansteps = mean(steps,na.rm = TRUE)) %>%
ggplot(aes(interval, meansteps)) +
geom_line() +
facet_grid(weekend ~ .) +
xlab("5-minute interval") +
ylab("avarage number of steps")
d %>% mutate(weekend = ifelse(weekdays(`date`) %in% c(0,6),'weekend' , 'weekday'))%>%
group_by(interval,weekend)%>% summarise(meansteps = mean(steps,na.rm = TRUE)) %>%
ggplot(aes(interval, meansteps)) +
geom_line() +
facet_grid(`weekend` ~ .) +
xlab("5-minute interval") +
ylab("avarage number of steps")
d %>% mutate(datetype = ifelse(weekdays(`date`) %in% c(0,6),'weekend' , 'weekday'))%>%
group_by(interval,datetype)%>% summarise(meansteps = mean(steps,na.rm = TRUE)) %>%
ggplot(aes(interval, meansteps)) +
geom_line() +
facet_grid(datetype ~ .) +
xlab("5-minute interval") +
ylab("avarage number of steps")
weekdays(2012-10-01)
weekdays(Sys.Date()+0:6)
d %>% mutate(datetype = ifelse(weekdays(`date`) %in% c("Saturday","Sunday"),'weekend' , 'weekday'))
d %>% mutate(datetype = ifelse(weekdays(`date`) %in% c("Saturday","Sunday"),'weekend' , 'weekday'))%>%table
d %>% mutate(datetype = ifelse(weekdays(`date`) %in% c("Saturday","Sunday"),"weekend" , "weekday"))%>%str
d %>% mutate(datetype = ifelse(weekdays(d$date) %in% c("Saturday","Sunday"),"weekend" , "weekday"))%>%str
d %>% mutate(datetype = as.factor(ifelse(weekdays(d$date) %in% c("Saturday","Sunday"),"weekend" , "weekday")))%>%str
d %>% weekdays(date)
d %>% mutate(W =weekdays(date))
d %>% mutate(W =weekdays(date)) %>% str
o <- d %>% mutate(W =weekdays(date))
o$W
table(o$W)
ifelse(o$w %in% c("Saturday","Sunday"),"weekend" , "weekday")
ifelse(o$W %in% c("Saturday","Sunday"),"weekend" , "weekday")
View(f)
f <- d %>% mutate(WD =weekdays(date)) %>%
mutate(weekend = ifelse(WD %in% c("Saturday","Sunday"),"weekend" , "weekday"))
head(f)
View(f)
f %>% group_by(weekend,interval)
f %>% group_by(weekend,interval) %>% summarise(meansteps = mean(steps,na.rm=TRUE))
f %>% group_by(weekend,interval) %>% summarise(meansteps = mean(steps,na.rm=TRUE)) %>%
ggplot(aes(x = interval , y = steps_per_day)) + geom_line() + facet_grid(weekend ~ .)
f %>% group_by(weekend,interval) %>% summarise(meansteps = mean(steps,na.rm=TRUE)) %>%
ggplot(aes(interval , meansteps)) + geom_line() + facet_grid(weekend ~ .) +
xlab("5-minute interval") + ylab("Average Number of Steps ") +
ggtitle("Time series of the average number of steps taken by weekend or weekday") +
theme(plot.title = element_text(hjust = 0.5))
setwd("~/RepData_PeerAssessment1")
d <- readr::read_csv("activity.zip")
head(d)
s <- d %>% group_by(date) %>% summarise(steps_per_day = sum(steps,na.rm=TRUE))
head(s)
s %>% ggplot(aes(x = steps_per_day)) + geom_histogram(binwidth = 500) +
xlab("Steps Per Day") + ylab("Frequncy") +
ggtitle("Histogram of The Total Number of Steps Taken Each Day") +
theme(plot.title = element_text(hjust = 0.5))
m1 <- mean(s$steps_per_day)
m2 <- median(s$steps_per_day)
a <- d %>% group_by(interval) %>% summarise(meansteps = mean(steps, na.rm = TRUE))
head(a)
a %>% ggplot(aes(x = interval , y = meansteps)) + geom_line()+
xlab("5-minute interval") + ylab("Average Number of Steps ") +
ggtitle("Time series of the average number of steps taken") +
theme(plot.title = element_text(hjust = 0.5))
a1 <- a %>% filter(meansteps == max(meansteps)) %>% slice(1)
a1 <- unname(unlist(a1[1,1]))
missing <- d %>% filter(is.na(steps)) %>% nrow
replace_na(d$steps,1) %>% head
I <- d %>%  mutate(steps = replace_na(steps,1))
head(I)
Is <- I %>% group_by(date) %>% summarise(steps_per_day = sum(steps))
Is %>%   ggplot(aes(x = steps_per_day)) + geom_histogram(binwidth = 500) +
xlab("Steps Per Day") + ylab("Frequncy") +
ggtitle("Histogram of The Total Number of Steps Taken Each Day") +
theme(plot.title = element_text(hjust = 0.5))
m3 <- mean(Is$steps_per_day)
m4 <- median(Is$steps_per_day)
f <- d %>% mutate(WD =weekdays(date)) %>%
mutate(weekend = ifelse(WD %in% c("Saturday","Sunday"),"weekend" , "weekday"))
head(f)
library(knitr)
?knit2html
knit2html("PA1_template.Rmd")
library(rmarkdown)
knit2html("PA1_template.Rmd")
rmarkdown::render( rmarkdown::render())
rmarkdown::render("PA1_template.Rmd")
rmarkdown::render("PA1_template.Rmd")
markdownToHTML(PA1_template.md)
kniter::markdownToHTML(PA1_template.md)
knitr::markdownToHTML(PA1_template.md)
knitr::knit2html("PA1_template.md")
knitr::markdownToHTML("PA1_template.md")
knitr::knit2html("PA1_template.Rmd")
rmarkdown::render("PA1_template.Rmd","html_document")
setwd("~/RepData_PeerAssessment1")
d <- readr::read_csv("activity.zip")
head(d)
s <- d %>% group_by(date) %>% summarise(steps_per_day = sum(steps,na.rm=TRUE))
setwd("~/RepData_PeerAssessment1")
d <- readr::read_csv("activity.zip")
head(d)
library(magrittr)
s <- d %>% group_by(date) %>% summarise(steps_per_day = sum(steps,na.rm=TRUE))
library(magrittr)
library(dplyr)
s <- d %>% group_by(date) %>% summarise(steps_per_day = sum(steps,na.rm=TRUE))
head(s)
setwd("~/RepData_PeerAssessment1")
d <- readr::read_csv("activity.zip")
head(d)
library(magrittr)
library(dplyr)
s <- d %>% group_by(date) %>% summarise(steps_per_day = sum(steps,na.rm=TRUE))
head(s)
s %>% ggplot(aes(x = steps_per_day)) + geom_histogram(binwidth = 500) +
xlab("Steps Per Day") + ylab("Frequncy") +
ggtitle("Histogram of The Total Number of Steps Taken Each Day") +
theme(plot.title = element_text(hjust = 0.5))
setwd("~/RepData_PeerAssessment1")
d <- readr::read_csv("activity.zip")
head(d)
library(magrittr)
library(dplyr)
s <- d %>% group_by(date) %>% summarise(steps_per_day = sum(steps,na.rm=TRUE))
head(s)
s %>% ggplot(aes(x = steps_per_day)) + geom_histogram(binwidth = 500) +
xlab("Steps Per Day") + ylab("Frequncy") +
ggtitle("Histogram of The Total Number of Steps Taken Each Day") +
theme(plot.title = element_text(hjust = 0.5))
f <- d %>% mutate(WD =weekdays(date)) %>%
mutate(weekend = ifelse(WD %in% c("Saturday","Sunday"),"weekend" , "weekday"))
head(f)
library(ggplot2)
s %>% ggplot(aes(x = steps_per_day)) + geom_histogram(binwidth = 500) +
xlab("Steps Per Day") + ylab("Frequncy") +
ggtitle("Histogram of The Total Number of Steps Taken Each Day") +
theme(plot.title = element_text(hjust = 0.5))
setwd("~/RepData_PeerAssessment1")
d <- readr::read_csv("activity.zip")
head(d)
library(magrittr)
library(dplyr)
s <- d %>% group_by(date) %>% summarise(steps_per_day = sum(steps,na.rm=TRUE))
head(s)
library(ggplot2)
s %>% ggplot(aes(x = steps_per_day)) + geom_histogram(binwidth = 500) +
xlab("Steps Per Day") + ylab("Frequncy") +
ggtitle("Histogram of The Total Number of Steps Taken Each Day") +
theme(plot.title = element_text(hjust = 0.5))
m1 <- mean(s$steps_per_day)
m2 <- median(s$steps_per_day)
a <- d %>% group_by(interval) %>% summarise(meansteps = mean(steps, na.rm = TRUE))
head(a)
a %>% ggplot(aes(x = interval , y = meansteps)) + geom_line()+
xlab("5-minute interval") + ylab("Average Number of Steps ") +
ggtitle("Time series of the average number of steps taken") +
theme(plot.title = element_text(hjust = 0.5))
a1 <- a %>% filter(meansteps == max(meansteps)) %>% slice(1)
a1 <- unname(unlist(a1[1,1]))
missing <- d %>% filter(is.na(steps)) %>% nrow
replace_na(d$steps,1) %>% head
library(tidyr)
replace_na(d$steps,1) %>% head
library(tidyr)
replace_na(d$steps,1) %>% head
I <- d %>%  mutate(steps = replace_na(steps,1))
head(I)
f %>% group_by(weekend,interval) %>% summarise(meansteps = mean(steps,na.rm=TRUE)) %>%
ggplot(aes(interval , meansteps)) + geom_line() + facet_grid(weekend ~ .) +
xlab("5-minute interval") + ylab("Average Number of Steps ") +
ggtitle("Time series of the average number of steps taken by weekend or weekday") +
theme(plot.title = element_text(hjust = 0.5))
setwd("~/RepData_PeerAssessment1")
d <- readr::read_csv("activity.zip")
head(d)
library(magrittr)
library(dplyr)
s <- d %>% group_by(date) %>% summarise(steps_per_day = sum(steps,na.rm=TRUE))
head(s)
library(ggplot2)
s %>% ggplot(aes(x = steps_per_day)) + geom_histogram(binwidth = 500) +
xlab("Steps Per Day") + ylab("Frequncy") +
ggtitle("Histogram of The Total Number of Steps Taken Each Day") +
theme(plot.title = element_text(hjust = 0.5))
m1 <- mean(s$steps_per_day)
m2 <- median(s$steps_per_day)
a <- d %>% group_by(interval) %>% summarise(meansteps = mean(steps, na.rm = TRUE))
head(a)
a %>% ggplot(aes(x = interval , y = meansteps)) + geom_line()+
xlab("5-minute interval") + ylab("Average Number of Steps ") +
ggtitle("Time series of the average number of steps taken") +
theme(plot.title = element_text(hjust = 0.5))
a1 <- a %>% filter(meansteps == max(meansteps)) %>% slice(1)
a1 <- unname(unlist(a1[1,1]))
missing <- d %>% filter(is.na(steps)) %>% nrow
library(tidyr)
replace_na(d$steps,1) %>% head
I <- d %>%  mutate(steps = replace_na(steps,1))
head(I)
Is <- I %>% group_by(date) %>% summarise(steps_per_day = sum(steps))
Is %>%   ggplot(aes(x = steps_per_day)) + geom_histogram(binwidth = 500) +
xlab("Steps Per Day") + ylab("Frequncy") +
ggtitle("Histogram of The Total Number of Steps Taken Each Day") +
theme(plot.title = element_text(hjust = 0.5))
m3 <- mean(Is$steps_per_day)
m4 <- median(Is$steps_per_day)
f <- d %>% mutate(WD =weekdays(date)) %>%
mutate(weekend = ifelse(WD %in% c("Saturday","Sunday"),"weekend" , "weekday"))
head(f)
library(magrittr)
library(dplyr)
s <- d %>% group_by(date) %>% summarise(steps_per_day = sum(steps,na.rm=TRUE))
head(s)
library(ggplot2)
s %>% ggplot(aes(x = steps_per_day)) + geom_histogram(binwidth = 500) +
xlab("Steps Per Day") + ylab("Frequncy") +
ggtitle("Histogram of The Total Number of Steps Taken Each Day") +
theme(plot.title = element_text(hjust = 0.5))
setwd("~/RepData_PeerAssessment1")
d <- readr::read_csv("activity.zip")
head(d)
library(magrittr)
library(dplyr)
s <- d %>% group_by(date) %>% summarise(steps_per_day = sum(steps,na.rm=TRUE))
head(s)
library(ggplot2)
s %>% ggplot(aes(x = steps_per_day)) + geom_histogram(binwidth = 500) +
xlab("Steps Per Day") + ylab("Frequncy") +
ggtitle("Histogram of The Total Number of Steps Taken Each Day") +
theme(plot.title = element_text(hjust = 0.5))
m1 <- mean(s$steps_per_day)
m2 <- median(s$steps_per_day)
a <- d %>% group_by(interval) %>% summarise(meansteps = mean(steps, na.rm = TRUE))
head(a)
a %>% ggplot(aes(x = interval , y = meansteps)) + geom_line()+
xlab("5-minute interval") + ylab("Average Number of Steps ") +
ggtitle("Time series of the average number of steps taken") +
theme(plot.title = element_text(hjust = 0.5))
a1 <- a %>% filter(meansteps == max(meansteps)) %>% slice(1)
a1 <- unname(unlist(a1[1,1]))
missing <- d %>% filter(is.na(steps)) %>% nrow
library(tidyr)
replace_na(d$steps,1) %>% head
I <- d %>%  mutate(steps = replace_na(steps,1))
head(I)
Is <- I %>% group_by(date) %>% summarise(steps_per_day = sum(steps))
Is %>%   ggplot(aes(x = steps_per_day)) + geom_histogram(binwidth = 500) +
xlab("Steps Per Day") + ylab("Frequncy") +
ggtitle("Histogram of The Total Number of Steps Taken Each Day") +
theme(plot.title = element_text(hjust = 0.5))
m3 <- mean(Is$steps_per_day)
m4 <- median(Is$steps_per_day)
f <- d %>% mutate(WD =weekdays(date)) %>%
mutate(weekend = ifelse(WD %in% c("Saturday","Sunday"),"weekend" , "weekday"))
head(f)
markdown::render("PA1_template.Rmd")
kintr::knit2html("PA1_template.Rmd")
knitr::knit2html("PA1_template.Rmd")
rmarkdown::render("PA1_template.Rmd")
